{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lian Samte\\\\Documents\\\\MERN Internship\\\\FInal Project\\\\view\\\\src\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./login.css\";\nimport swal from \"sweetalert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  async function validate(event) {\n    event.preventDefault();\n\n    // Make an API request to your server-side authentication endpoint\n    const response = await fetch('/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n\n    // Parse the response as JSON\n    const data = await response.json();\n\n    // Check the authentication result\n    if (response.ok && data.authenticated) {\n      // Authentication successful\n      swal('Login successful', 'You remembered your details!', 'success');\n    } else {\n      // Authentication failed\n      swal('Invalid Credentials', 'Invalid username or password', 'error');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"header\",\n          children: \"User Authentication\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: validate,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            placeholder: \"username\",\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            placeholder: \"password\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"btn btn-primary\",\n            type: \"submit\",\n            value: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"Lrw7JeD9zj6OUWhT/IH4OIvPKEk=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","swal","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","validate","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","authenticated","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","e","target","value","_c","$RefreshReg$"],"sources":["C:/Users/Lian Samte/Documents/MERN Internship/FInal Project/view/src/login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./login.css\";\r\nimport swal from \"sweetalert\";\r\n\r\nfunction Login()\r\n{\r\n    const[username, setUsername] = useState(\"\");\r\n    const[password, setPassword] = useState(\"\");\r\n\r\n    async function validate(event) \r\n    {\r\n        event.preventDefault();\r\n      \r\n        // Make an API request to your server-side authentication endpoint\r\n        const response = await fetch('/login', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            username,\r\n            password,\r\n          }),\r\n        });\r\n      \r\n        // Parse the response as JSON\r\n        const data = await response.json();\r\n      \r\n        // Check the authentication result\r\n        if (response.ok && data.authenticated) {\r\n          // Authentication successful\r\n          swal('Login successful', 'You remembered your details!', 'success');\r\n        } else {\r\n          // Authentication failed\r\n          swal('Invalid Credentials', 'Invalid username or password', 'error');\r\n        }\r\n    }\r\n      \r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-md-4 card\">\r\n                    <h1 className=\"header\">User Authentication</h1>\r\n\r\n                    <form onSubmit={validate}>\r\n                        <input className=\"form-control\" type=\"text\" placeholder=\"username\" \r\n                            onChange={(e)=> setUsername(e.target.value)}/>                            \r\n                        <input className=\"form-control\" type=\"text\" placeholder=\"password\" \r\n                            onChange={(e)=> setPassword(e.target.value)}/>\r\n                        <input className=\"btn btn-primary\" type=\"submit\" value=\"Login\" />\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}